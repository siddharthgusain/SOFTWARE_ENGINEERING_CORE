-> After the evolution of microprocessors and Memory circuits. there was need of language other than
machine code i.e series of 0 and 1.
-> First low level or direct mapping language was assembly which is according to microprocessor architecture.
-> During early Microprocessor days people used to write code in assembly only.
-> Even operating systems were completely written in assembly only.
-> But learning assembly was not easy for a new programmer.
-> At that time there was need for a system programming language , so C was created as to write operating system.

C ERA
-> So people started writting code in C and the assembly was generated by softwares like compiler and assembler.
-> It was easy to work with C than in assembly, C was used for system programming back then.

C++ ERA
-> It came as an successor to C with OOPS syntax inside it for production level softwares.
-> It became very popular for Operating system and Game engine development.

NEED FOR GARBAGE COLLECTOR LANGUAGES AND PORTABILITY
JAVA ERA
-> Java was introduced in which garbage collection was written , to let developer focus on there logic
and not care about memory management that much.
-> Also The source code was compiled to intermediate code known as bytecode which is not the assembly code
, it is architecture independent representation of java source code
-> There was need of software which convert this bytecode to actual machine code according to architecture 
so JAVA Virtual Machine(JVM) was introduced to do this, it was written in C only.

JAVASCRIPT ERA
-> Now the operating system infrastructure was in place , and new fields like content sharing over web was
going on, Softwares like browser were built in C++ to show web pages that were static.
->Now Javascript was developed for web , which itself run  on some software known as Javascript Engine written
in C++ only.

Other languages were also there like python, Ruby , Rust etc.

EACH LANGUAGE HAS SOLVED SOME PROBLEM OF THERE OWN ERA , AND TO LET MORE PEOPLE PROGRAM COMPUTERS.

IF WE OBSERVE EVERY LANGUAGE SOURCE CODE IS COMPILED/INTERPRETED INTO MACHINE CODE(INSTRUCTION SET OF CPU) , ONLY 
THE WAY WE COMPILE/BUILD AND RUN THE PROGRAM IS DIFFERENT(EACH LANGUAGE HAS DIFFERENT ABSTRACTION FOR COMPILATION PROCESS).

EVOLUTION ARTICLE:-
https://devskiller.com/history-of-programming-languages/