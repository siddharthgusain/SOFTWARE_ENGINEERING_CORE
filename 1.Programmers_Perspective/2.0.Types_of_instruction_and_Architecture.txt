-> Program =  data + instructions
-> Instructions depends on instruction set architecture of a particular CPU (e.g x86)

Instructions can be broadly categorized into :-
1. Data transfer (from/to RAM or HDD)
2. Data manipulation
-> Logical operation
-> Arithematic operation
-> Shift operation
3. Logical and control flow
-> if else 
-> looping

-> NOTE:- ANY program we write in any language , it will be converted to machines instruction set only.
-> Writing program in high level is only for being productive as the machine code is generated automatically 
by softwares like compiler and assembler.

Instruction set architecture(ISA) can be of many types:-
1. CISC(Complex instructions set computer) -> General purpose Computer chips(x86  intel cpu)
2. RISC(Reduced Instruction set computer) -> Mobile , ASIC etc. (ARM)
3. Minimal instruction set computers (MISC)
4. Very long instruction word (VLIW)
5. Explicitly parallel instruction computing (EPIC)
6. One instruction set computer (OISC)
7. Zero instruction set computer (ZISC)

At hardware level parallelism can be achieved with :-
1. Pipelining(Multiple Execution unit/Stages in one CPU)[Instruction level parallelism]
2. Multicore processors (Multiple core in single CPU) --> personal Computers
3. Multiple processors with MultiCores --> Server machines

At software level parallelism can be viewed as:-
1. Multiprocessing(fork())
2. Multithreading(threads)