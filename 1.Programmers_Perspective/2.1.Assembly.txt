NOTE:- LINK TO WEBSITE :- https://godbolt.org/

-> Before moving to the assembly language , its important to understand what instruction set
architecture means , formally known as ISA.

-> Instruction set architecture defines what kind of instruction a particular CPU design can execute.
-> E.g x86 instruction set is way different from ARM architecture
-> instruction set architecture also defines the size of instruction in bits and how to operate on them
-> Assembly instruction is different for different CPU architecture.
Some of the major architecture are:-
1. x86-64,x86-32
2. ARM
3. MIPS

-> Assembler for each architecture is different
-> As we move towards high level abstraction , platform dependency keeps on decreasing but performance also decreases.

History:-
1. Assembly first appeared on 1949; 73 years ago
2. In computer programming, assembly language is any low-level programming language with a very strong correspondence 
between the instructions in the language and the architecture's machine code instructions.
-> Assembly language usually has one statement per machine instruction (1:1), but constants, comments, assembler 
directives,symbolic labels of  e.g. memory locations, registers, and macro are generally also supported.
-> Because assembly depends on the machine code instructions, each assembly language is specific to a particular 
computer architecture.

AN EXAMPLE:- 
1. Machine code :- 10110000 01100001
2. Hex representation: B0 61
3. Assembly :- MOV AL, 61h
